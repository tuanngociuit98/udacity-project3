{
	"info": {
		"_postman_id": "6aeaef11-3c5e-411e-b4e4-0753844ffd47",
		"name": "Regression_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16794720"
	},
	"item": [
		{
			"name": "Create Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = pm.response.json();",
							"pm.environment.set(\"id\", json.data.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Successful response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							"pm.test(\"Check data is not null\", function () {",
							"    pm.expect(json.data).not.null",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{name}}\",\n    \"salary\": \"{{salary}}\",\n    \"age\": \"{{age}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{api_path_create}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_path_create}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Successful response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							"pm.test(\"Check employee name\", function () {",
							"    pm.expect(json.data.employee_name).to.equal(\"Doris Wilder\")",
							"});",
							"pm.test(\"Check Employee age\", function () {",
							"    pm.expect(json.data.employee_age).to.equal(23)",
							"});",
							"pm.test(\"Check Employee Salary\", function () {",
							"    pm.expect(json.data.employee_salary).to.equal(85600)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{api_path}}/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_path}}",
						"2"
					]
				},
				"description": "Get a single employee data"
			},
			"response": []
		},
		{
			"name": "Update Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Successful response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							"pm.test(\"Check employee name\", function () {",
							"    pm.expect(json.data.name).to.equal(\"Iris\")",
							"});",
							"pm.test(\"Check Employee age\", function () {",
							"    pm.expect(json.data.age).to.equal(\"40\")",
							"});",
							"pm.test(\"Check Employee Salary\", function () {",
							"    pm.expect(json.data.salary).to.equal(\"2000000\")",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{new_name}}\",\n    \"salary\": \"{{new_salary}}\",\n    \"age\": \"{{new_age}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{api_path_update}}/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_path_update}}",
						"{{id}}"
					]
				},
				"description": "Update an employee record"
			},
			"response": []
		},
		{
			"name": "Delete Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Successful response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/{{api_path_delete}}/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_path_delete}}",
						"{{id}}"
					]
				},
				"description": "Delete an employee record"
			},
			"response": []
		}
	]
}